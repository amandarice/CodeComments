C: a comment starts with a slash asterisk and ends with a asterisk slash
c: a comment starts with a slash asterisk and ends with a asterisk slash
see plus plus: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
java: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
java script: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
scala: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
scall a: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
scale a: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
go: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
sass: for single line comments, use two slashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
python: just use the hash character at the beginning of the comment for each line of code
R: just use the hash character at the beginning of the comment for each line of code
r: just use the hash character at the beginning of the comment for each line of code
SAS: just use the hash character at the beginning of the comment for each line of code
CSS: use a slash asterisk to start the comment and an asterisk slash to end the comment
css: use a slash asterisk to start the comment and an asterisk slash to end the comment
HTML: the opening characters are the less than character, exclamation mark, dash, dash, and the closing characters are dash, dash, the greater than character
PHP: for single line comments, use two slashes or a hash at the beginning of each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
react: in jsx, you need to open with a slash asterisk and close with an asterisk slash, all wrapped in curly braces to invoke javascript
react JS: in jsx, you need to open with a slash asterisk and close with an asterisk slash, all wrapped in curly braces to invoke javascript
react JSX: you need to open with a slash asterisk and close with an asterisk slash, all wrapped in curly braces to invoke javascript
JSX: you need to open with a slash asterisk and close with an asterisk slash, all wrapped in curly braces to invoke javascript
angular: there is no special syntax for comments
angular JS: there is no special syntax for comments
assembly: comments begin with a semicolon and can appear on a line by itself or on the same line along with an instruction
assembly language: comments begin with a semicolon and can appear on a line by itself or on the same line along with an instruction
bash: just use the hash character at the beginning of the comment for each line of code
linux: just use the hash character at the beginning of the comment for each line of code
DOS: use REM at the beginning of the comment for each line of code
doss: use REM at the beginning of the comment for each line of code
docker: lines that begin with a hash are treated as comments
fortran: use an exclamation mark at the beginning of the comment for each line of code
f sharp: for single line comments, use two slashes at the beginning of each line of code. for multi-line comments, use an open parenthesis, asterisk to open a comment and asterisk, closed parenthesis to close a comment
F sharp: for single line comments, use two slashes at the beginning of each line of code. for multi-line comments, use an open parenthesis, asterisk to open a comment and asterisk, closed parenthesis to close a comment
git ignore: blank lines or lines starting with a hash are ignored
get ignore: blank lines or lines starting with a hash are ignored
hive: lines that begin with a dash, dash are treated as comments
haskell: use two dashes at the beginning of the comment for each line of code
SQL: for single line comments, use two dashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
sequel: for single line comments, use two dashes at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
JSON: there are no explicit comments, but you could have a designated data element called something like underscore comment that would be ignored by apps that use the JSON data
lisp: comments that start with a single semicolon should all be aligned to the same column on the right of the source code. Comments that start with two semicolons should be aligned to the same level of indentation as the code. Two semicolons are used to comment outside of functions. Comments that start with three semicolons should start at the left margin. Comments that start with four semicolons should be aligned to the left margin and are used for headings of major sections of a program. Generally speaking, the capital M dash semicolon, called the comment-dwim command, automatically starts a comment of the appropriate type or indents an existing comment to the right place, depending on the number of semicolons
matlab: use a percent sign at the beginning of the comment for each line of code
makefile: use the hash character at the beginning of the comment for each line of code
make file: use the hash character at the beginning of the comment for each line of code
prolog: for single line comments, use the percent sign at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
prologue: for single line comments, use the percent sign at the beginning of the comment for each line of code. for multi-line comments, use a slash asterisk to start the comment and an asterisk slash to end the comment
ruby: for single line comments, use the hash character at the beginning of the comment for each line of code. for multi-line comments, use the equal sign, begin start the comment and the equal sign, end to end the comment
visual basic: use a single quote or REM at the beginning of the comment for each line of code
